import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> list = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());
        int[] a = list.stream().mapToInt(i->i).toArray();
        
        int numberOfTotalSwaps = 0;
        for (int i = 0; i < n; i++) {
    // Track number of elements swapped during a single array traversal
        int numberOfSwaps = 0;

    for (int j = 0; j < n - 1; j++) {
        // Swap adjacent elements if they are in decreasing order
        if (a[j] > a[j + 1]) {
            int temp=a[j];
            a[j]=a[j+1];
            a[j+1]=temp;
            numberOfSwaps++;
            numberOfTotalSwaps++;
        }
    }
    
    // If no elements were swapped during a traversal, array is sorted
    if (numberOfSwaps == 0) {
        break;
            }
        }
        System.out.println(String.format("Array is sorted in %d swaps.",numberOfTotalSwaps));
        System.out.println(String.format("First Element: %d",a[0]));
        System.out.println(String.format("Last Element: %d",a[n-1]));


        bufferedReader.close();
    }
}
