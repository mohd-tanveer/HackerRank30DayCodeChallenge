import java.util.*;
import java.io.*;
class Node{
    Node left,right;
    int data;
    Node(int data){
        this.data=data;
        left=right=null;
    }
}
class Solution{

static void levelOrder(Node root){
        //Write your code here
        Queue<Node> queue = new LinkedList<>();
        List<List<Integer>> listTobeReturn  = new LinkedList<>();
        queue.offer(root);
        while(!queue.isEmpty()){
            List<Integer> sublist = new LinkedList<>();
            for(int i=0;i<queue.size();i++){
                if(queue.peek().left != null) queue.offer(queue.peek().left);
                if(queue.peek().right != null) queue.offer(queue.peek().right);
                sublist.add(queue.poll().data);
            }
            listTobeReturn.add(sublist);
        }
        listTobeReturn.stream().flatMap(Collection::stream).forEach(integer -> System.out.print(integer + " "));

    }
public static Node insert(Node root,int data){
        if(root==null){
            return new Node(data);
        }
        else{
            Node cur;
            if(data<=root.data){
                cur=insert(root.left,data);
                root.left=cur;
            }
            else{
                cur=insert(root.right,data);
                root.right=cur;
            }
            return root;
        }
    }
    public static void main(String args[]){
            Scanner sc=new Scanner(System.in);
            int T=sc.nextInt();
            Node root=null;
            while(T-- > 0){
                int data=sc.nextInt();
                root=insert(root,data);
            }
            levelOrder(root);
        }	
}
